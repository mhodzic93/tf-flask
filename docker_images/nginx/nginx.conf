user  nginx;
worker_processes  1;


error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    server_names_hash_bucket_size  128;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    server {
      listen 443 ssl;
      listen [::]:443 ssl;
      include snippets/self-signed.conf;
      include snippets/ssl-params.conf;
      server_name {{SERVER_NAME}};
      resolver {{RESOLVER}};
      set $upstream_flask http://{{SERVER_NAME}}:5000;
      set $upstream_node http://{{SERVER_NAME}}:3000;

    location ~* ^/add(.*) {
      proxy_pass_request_headers on;
      proxy_pass $upstream_node$request_uri;
    }

    location ~* ^/subtract(.*) {
      proxy_pass_request_headers on;
      proxy_pass $upstream_node$request_uri;
    }

    location ~* ^/multiply(.*) {
      proxy_pass_request_headers on;
      proxy_pass $upstream_node$request_uri;
    }

    location ~* ^/divide(.*) {
      proxy_pass_request_headers on;
      proxy_pass $upstream_node$request_uri;
    }

    location ~* ^/(.*) {
      proxy_pass $upstream_flask$request_uri;
    }
  }
    server {
      listen 80;
      listen [::]:80;
      server_name {{SERVER_NAME}};
      return 302 https://$server_name$request_uri;
  }
}
